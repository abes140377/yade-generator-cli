version: 3

env:
  EXAMPLE_PROJECT_NAME: example
  GITLAB_PROJECT_NAME: gitlab
  GITLAB_RUNNER_PROJECT_NAME: gitlab-runner
  CODER_PROJECT_NAME: coder
  KEYCLOAK_PROJECT_NAME: keycloak
  MATRIX_PROJECT_NAME: matrix
  VAULT_PROJECT_NAME: vault
  BITWARDEN_PROJECT_NAME: bitwarden
  APPWRITE_PROJECT_NAME: appwrite
  WINDMILL_PROJECT_NAME: windmill

tasks:
  # === CREATE SINGLE VMS ===
  yade:create:bitwarden:single:
    desc: Create the bitwarden repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.BITWARDEN_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm005 \
          --ansible_collections=community.general:9.4.0 \
          --ansible_roles=maartenbeeckmans.bitwarden:x.y.z \
          {{.BITWARDEN_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.BITWARDEN_PROJECT_NAME}}-mgm
    silent: true

  yade:create:vault:single:
    desc: Create the vault repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.VAULT_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm003 \
          --ansible_collections=community.general:9.4.0,community.hashi_vault:6.2.0 \
          --ansible_roles=tomhesse.traefik:1.0.1,robertdebock.hashicorp:3.4.7,robertdebock.vault_configuration:5.0.2,robertdebock.vault:6.1.5 \
          {{.VAULT_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.VAULT_PROJECT_NAME}}-mgm
    silent: true

  yade:create:matrix:single:
    desc: Create the matrix repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.MATRIX_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm005 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.MATRIX_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.MATRIX_PROJECT_NAME}}-mgm
    silent: true

  yade:create:keycloak:single:
    desc: Create the keycloak repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.KEYCLOAK_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm006 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.KEYCLOAK_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.KEYCLOAK_PROJECT_NAME}}-mgm
    silent: true

  yade:create:coder:single:
    desc: Create the coder repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.CODER_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm005 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1,thehedgefrog.coder_v2_install:v1.2.0 \
          {{.CODER_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.CODER_PROJECT_NAME}}-mgm
    silent: true

  yade:create:appwrite:single:
    desc: Create the appwrite repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.APPWRITE_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm007 \
          --ansible_collections=community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.APPWRITE_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.APPWRITE_PROJECT_NAME}}-mgm
    silent: true

  yade:create:windmill:single:
    desc: Create the example repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.WINDMILL_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm006 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.WINDMILL_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.WINDMILL_PROJECT_NAME}}-mgm
    silent: true

  yade:create:gitlab:single:
    desc: Create the gitlab repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.GITLAB_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm001 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0,community.hashi_vault:6.2.0,adfinis.gitlab:1.0.1 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.GITLAB_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  yade:create:gitlab-runner:single:
    desc: Create the gitlab-runner repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.GITLAB_RUNNER_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm002 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.GITLAB_RUNNER_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  yade:create:example:single:
    desc: Create the example repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm004 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.EXAMPLE_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  yade:test:cli:
    desc: Test cli
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      - dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart cluster create --help
      - dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart project create --help
      - dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart singlevm create --help
    silent: true

  # === CREATE PROJECT ===

  yade:project:create:example:
    desc: Create the example project environment using the dart cli tool
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      # - clear
      # - pwd
      # - rm -rf ~/projects/example-yade/*
      - dart packages/yade_cli/bin/yade.dart project create {{.EXAMPLE_PROJECT_NAME}}
    silent: true

  yade:project:repository:add:example:
    desc: Add a repository to the example project environment using the dart cli tool
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      # - clear
      # - pwd
      #  - rm -rf ~/projects/example-yade/*
      - dart packages/yade_cli/bin/yade.dart project repository add
      # - dart packages/yade_cli/bin/yade.dart project repository add
    silent: true

  # === CREATE CLUSTER VMS ===

  yade:create:example:cluster:
    desc: Create the example cluster repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-cluster-{{.EXAMPLE_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart create-cluster \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm004 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.EXAMPLE_PROJECT_NAME}}
    silent: true

  # === REPOSITORIES COMPILED ===

  yade:create:example:compiled:
    desc: Create the example repository using the compiled dart cli tool
    deps:
      - yade:compile
    dir: "{{.HOME}}/projects/cas-yade/src/"
    cmds:
      # - rm -rf cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
      - clear
      # - yade-generator-cli/build/yade --version
      - |
        yade-generator-cli/build/yade create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm004 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.EXAMPLE_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  yade:create:vault:compiled:
    desc: Create the vault repository using the compiled dart cli tool
    deps:
      - yade:compile
    dir: "{{.HOME}}/projects/cas-yade/src/"
    cmds:
      - clear
      - |
        yade-generator-cli/build/yade create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm003 \
          --ansible_collections=community.general:9.4.0,community.hashi_vault:6.2.0 \
          --ansible_roles=tomhesse.traefik:1.0.1,robertdebock.hashicorp:3.4.7,robertdebock.vault_configuration:5.0.2,robertdebock.vault:6.1.5 \
          {{.VAULT_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.VAULT_PROJECT_NAME}}-mgm
    silent: true

  yade:update:compiled:
    desc: Update the compiled dart cli tool
    deps:
      - yade:compile
    dir: "{{.HOME}}/projects/cas-yade/src/"
    cmds:
      - clear
      - |
        yade-generator-cli/build/yade update
    silent: true

  # === CREATE SINGLE VMS GITHUB ===

  yade:create:example:single:github:
    desc: Create a test repository using the compiled dart cli tool
    deps:
      - yade:install:github
    dir: "{{.HOME}}/projects/cas-yade/src/"
    cmds:
      # - rm -rf cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
      - clear
      - |
        yade create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm004 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.EXAMPLE_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  yade:create:vault:single:github:
    desc: Create a test repository using the compiled dart cli tool
    deps:
      - yade:install:github
    dir: "{{.HOME}}/projects/cas-yade/src/"
    cmds:
      # - rm -rf cas-{{.VAULT_PROJECT_NAME}}-mgm
      - clear
      - |
        yade create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm003 \
          --ansible_collections=community.general:9.4.0,community.hashi_vault:6.2.0 \
          --ansible_roles=tomhesse.traefik:1.0.1,robertdebock.hashicorp:3.4.7,robertdebock.vault_configuration:5.0.2,robertdebock.vault:6.1.5 \
          {{.VAULT_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.VAULT_PROJECT_NAME}}-mgm
    silent: true

  # === COMMON ===

  dart:cleanup:
    desc: Remove dart cache files like .dart_tool and pubspec.lock recursively
    cmds:
      - find . -type d -name ".dart_tool" -exec rm -r {} +
      - find . -name "pubspec.lock" -type f -delete
    silent: true

  dart:init:
    desc: Initialize dart projects yade-generator-cli recursively
    cmds:
      - cd ./packages/yade_cli && dart pub get
    silent: true

  mason:bundle:templates:local:
    desc: Bundle templates locally
    cmds:
      # bundle templates
      - >
        mason bundle \
          -s path ./bricks/cluster_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/cluster/create/templates
        mason bundle \
          -s path ./bricks/project_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/project/create/templates
        mason bundle \
          -s path ./bricks/singlevm_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/singlevm/create/templates
      # format
      - dart format ./packages/yade_cli
    silent: true

  mason:bundle:templates:git:
    desc: Bundle templates from git repo
    cmds:
      # bundle templates
      - >
        mason bundle \
          -s git git@github.com:abes140377/yade-generator-cli.git \
          --git-path bricks/singlevm_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/singlevm_create/templates
        mason bundle \
          -s git git@github.com:abes140377/yade-generator-cli.git \
          --git-path bricks/cluster_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/cluster_create/templates
        mason bundle \
          -s git git@github.com:abes140377/yade-generator-cli.git \
          --git-path bricks/project_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/project_create/templates
      # format
      - dart format ./packages/yade_cli
    silent: true

  dart:run:build_runner:
    desc: Run dart build_runner build to generate version.dart file
    dir: packages/yade_cli
    cmds:
      - dart run build_runner build --delete-conflicting-outputs
    silent: true

  yade:compile:
    desc: Compile the dart cli tool to a binary
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - rm -rf build/yade
      - mkdir -p build
      - dart compile exe ./packages/yade_cli/bin/yade.dart -o ./build/yade
    silent: true

  yade:install:github:
    desc: Install yade cli tool by using the install.sh script from github
    cmds:
      - sudo rm -rf /usr/local/bin/yade
      - curl -sS https://raw.githubusercontent.com/abes140377/yade-generator-cli/refs/heads/main/scripts/install.sh | sudo bash
    silent: true

  yade:release:patch:
    desc: Create a patch release of the yade cli tool
    cmds:
      - echo "Bump patch version for release"
      - mag modify bump --targets 'patch' --directory="packages/yade_cli/pubspec.yaml"
      - echo "Commit and push changes to develop"
      - 'git add . && git commit -m "chore: bump patch version for release" && git push origin develop'
      - echo "Merge develop into main, create a tag and push it"
      - git checkout main && git merge develop && git push origin main
      - git tag -a $(cider --project-root=packages/yade_cli version) -m "Release $(cider --project-root=packages/yade_cli version)"
      - git push --tags
      - echo "Checkout develop and merge main"
      - git checkout develop && git merge main && git push origin develop
    silent: true

  yade:release:minor:
    desc: Create a minor release of the yade cli tool
    cmds:
      - echo "Bump minor version for release"
      - mag modify bump --targets 'minor' --directory="packages/yade_cli/pubspec.yaml"
      - echo "Commit and push changes to develop"
      - 'git add . && git commit -m "chore: bump minor version for release" && git push origin develop'
      - echo "Merge develop into main, create a tag and push it"
      - git checkout main && git merge develop && git push origin main
      - git tag -a $(cider --project-root=packages/yade_cli version) -m "Release $(cider --project-root=packages/yade_cli version)"
      - git push --tags
      - echo "Checkout develop and merge main"
      - git checkout develop && git merge main && git push origin develop
    silent: true
