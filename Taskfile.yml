version: 3

env:
  EXAMPLE_PROJECT_NAME: example
  GITLAB_PROJECT_NAME: gitlab
  GITLAB_RUNNER_PROJECT_NAME: gitlab-runner
  VAULT_PROJECT_NAME: vault

tasks:
  # === CREATE PROJECT ===

  yade:project:create:example:
    desc: Create the example project environment using the dart cli tool
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      # - clear
      # - pwd
      # - rm -rf ~/projects/example-yade/*
      - dart packages/yade_cli/bin/yade.dart project create {{.EXAMPLE_PROJECT_NAME}}
    silent: true

  yade:project:repository:add:example:
    desc: Add a repository to the example project environment using the dart cli tool
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      # - clear
      # - pwd
      #  - rm -rf ~/projects/example-yade/*
      - dart packages/yade_cli/bin/yade.dart project repository add
      # - dart packages/yade_cli/bin/yade.dart project repository add
    silent: true

  # === CREATE VM GROUPS ===

  yade:grp:create:example:
    desc: Create the example vm group repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart grp create \
          --project_id=example \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm004 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.EXAMPLE_PROJECT_NAME}}
      # - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  yade:grp:create:gitlab:
    desc: Create the gitlab vm group repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.GITLAB_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart grp create \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm001 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0,community.hashi_vault:6.2.0,adfinis.gitlab:1.0.1 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.GITLAB_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  yade:grp:create:gitlab-runner:
    desc: Create the gitlab-runner vm group repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-{{.GITLAB_RUNNER_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart grp create \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm002 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.GITLAB_RUNNER_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  # === CREATE K82 VMS ===

  yade:k8s:create:example:
    desc: Create the example k8s cluster repository using the dart cli tool
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      # - rm -rf cas-k8s-{{.EXAMPLE_PROJECT_NAME}}-mgm
      - clear
      - |
        dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart k8s create \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm004 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.EXAMPLE_PROJECT_NAME}}
    silent: true

  # === TEST CLI ===

  yade:test:cli:
    desc: Test cli
    dir: ../
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - pwd
      - dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart grp create --help
      - dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart k8s create --help
      - dart ./yade-generator-cli/packages/yade_cli/bin/yade.dart project create --help
    silent: true

  # === COMPILED ===

  yade:create:example:compiled:
    desc: Create the example repository using the compiled dart cli tool
    deps:
      - yade:compile
    dir: "{{.HOME}}/projects/cas-yade/src/"
    cmds:
      # - rm -rf cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
      - clear
      # - yade-generator-cli/build/yade --version
      - |
        yade-generator-cli/build/yade create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm004 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.EXAMPLE_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  yade:update:compiled:
    desc: Update the compiled dart cli tool
    deps:
      - yade:compile
    dir: "{{.HOME}}/projects/cas-yade/src/"
    cmds:
      - clear
      - |
        yade-generator-cli/build/yade update
    silent: true

  # === GITHUB ===

  yade:create:example:single:github:
    desc: Create a test repository using the compiled dart cli tool
    deps:
      - yade:install:github
    dir: "{{.HOME}}/projects/cas-yade/src/"
    cmds:
      # - rm -rf cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
      - clear
      - |
        yade create-single \
          --organization=cas \
          --environment=mgm \
          --hostname=viicasmgm004 \
          --ansible_collections=community.docker:3.12.1,community.general:9.4.0 \
          --ansible_roles=geerlingguy.docker:7.4.1 \
          {{.EXAMPLE_PROJECT_NAME}}
      - cp cas-gitlab-mgm/.env.private cas-{{.EXAMPLE_PROJECT_NAME}}-mgm
    silent: true

  # === COMMON ===

  dart:cleanup:
    desc: Remove dart cache files like .dart_tool and pubspec.lock recursively
    cmds:
      - find . -type d -name ".dart_tool" -exec rm -r {} +
      - find . -name "pubspec.lock" -type f -delete
    silent: true

  dart:init:
    desc: Initialize dart projects yade-generator-cli recursively
    cmds:
      - cd ./packages/yade_cli && dart pub get
    silent: true

  dart:run:build_runner:
    desc: Run dart build_runner build to generate version.dart file
    dir: packages/yade_cli
    cmds:
      - dart run build_runner build --delete-conflicting-outputs
    silent: true

  mason:bundle:templates:local:
    desc: Bundle templates locally
    cmds:
      # bundle templates
      - >
        mason bundle \
          -s path ./bricks/k8s_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/k8s/create/templates
        mason bundle \
          -s path ./bricks/grp_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/grp/create/templates
        mason bundle \
          -s path ./bricks/project_create \
          -t dart \
          -o packages/yade_cli/lib/src/command/project/create/templates
      # format
      - dart format ./packages/yade_cli
    silent: true

  yade:compile:
    desc: Compile the dart cli tool to a binary
    deps:
      - mason:bundle:templates:local
      - dart:run:build_runner
    cmds:
      - rm -rf build/yade
      - mkdir -p build
      - dart compile exe ./packages/yade_cli/bin/yade.dart -o ./build/yade
    silent: true

  yade:install:github:
    desc: Install yade cli tool by using the install.sh script from github
    cmds:
      - sudo rm -rf /usr/local/bin/yade
      - curl -sS https://raw.githubusercontent.com/abes140377/yade-generator-cli/refs/heads/main/scripts/install.sh | sudo bash
    silent: true

  yade:release:patch:
    desc: Create a patch release of the yade cli tool
    cmds:
      - echo "Bump patch version for release"
      - mag modify bump --targets 'patch' --directory="packages/yade_cli/pubspec.yaml"
      - echo "Commit and push changes to develop"
      - 'git add . && git commit -m "chore: bump patch version for release" && git push origin develop'
      - echo "Merge develop into main, create a tag and push it"
      - git checkout main && git merge develop && git push origin main
      - git tag -a $(cider --project-root=packages/yade_cli version) -m "Release $(cider --project-root=packages/yade_cli version)"
      - git push --tags
      - echo "Checkout develop and merge main"
      - git checkout develop && git merge main && git push origin develop
    silent: true

  yade:release:minor:
    desc: Create a minor release of the yade cli tool
    cmds:
      - echo "Bump minor version for release"
      - mag modify bump --targets 'minor' --directory="packages/yade_cli/pubspec.yaml"
      - echo "Commit and push changes to develop"
      - 'git add . && git commit -m "chore: bump minor version for release" && git push origin develop'
      - echo "Merge develop into main, create a tag and push it"
      - git checkout main && git merge develop && git push origin main
      - git tag -a $(cider --project-root=packages/yade_cli version) -m "Release $(cider --project-root=packages/yade_cli version)"
      - git push --tags
      - echo "Checkout develop and merge main"
      - git checkout develop && git merge main && git push origin develop
    silent: true
